{"version":3,"sources":["components/main/navbar/index.js","components/main/index.js","App.js","serviceWorker.js","index.js"],"names":["navbar","class","className","href","src","alt","data-target","id","main","action","method","type","placeholder","async","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+QAIe,SAASA,IACpB,OAAO,yBAAKC,MAAM,UACtB,yBAAKA,MAAM,aACP,yBAAKA,MAAM,gBACP,uBAAGC,UAAU,cAAcC,KAAK,OAC5B,yBAAKC,IAAI,8CAA8CC,IAAI,UAE/D,0BAAMJ,MAAM,uBAAuBK,cAAY,cAC3C,+BACA,+BACA,gCAGR,yBAAKC,GAAG,aAAaN,MAAM,eACvB,yBAAKA,MAAM,cACP,0BAAMA,MAAM,eACR,uBAAGA,MAAM,8BAA8BE,KAAK,SACxC,0BAAMF,MAAM,QACR,uBAAGA,MAAM,gBAEb,wCAGR,0BAAMA,MAAM,eACR,uBAAGA,MAAM,8BAA8BE,KAAK,SACxC,0BAAMF,MAAM,QACR,uBAAGA,MAAM,uBAEb,wCAGR,0BAAMA,MAAM,eACR,uBAAGA,MAAM,8BAA8BE,KAAK,YACxC,0BAAMF,MAAM,QACR,uBAAGA,MAAM,gBAEb,8CAGR,0BAAMA,MAAM,eACR,uBAAGA,MAAM,8BAA8BE,KAAK,wFACxC,0BAAMF,MAAM,QACR,uBAAGA,MAAM,kBAEb,oDC5CL,SAASO,IACpB,OAAO,6BACH,kBAAC,EAAD,MAEJ,6BAASP,MAAM,8BACX,yBAAKA,MAAM,cAEP,yBAAKA,MAAM,aACP,yBAAKA,MAAM,+BACP,yBAAKA,MAAM,2BACP,wBAAIA,MAAM,SAAV,YAGA,wBAAIA,MAAM,YAAV,gPAQA,yBAAKA,MAAM,OACX,0BACRQ,OAAO,qDACPC,OAAO,QAEK,yBAAKT,MAAM,oBACP,uBAAGA,MAAM,uBACL,2BAAOA,MAAM,QAAQU,KAAK,OAAOC,YAAY,qBACjD,6BACA,uBAAGX,MAAM,WACL,uBAAGA,MAAM,kBAAT,sBAahC,4BAAQY,OAAK,EAACF,KAAK,kBAAkBP,IAAI,qB,MCrC9BU,MAPf,WACE,OACE,kBAAC,EAAD,OCMgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6c68c8e7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport \"../navbar\";\n\nexport default function navbar() {\n    return <nav class=\"navbar\">\n<div class=\"container\">\n    <div class=\"navbar-brand\">\n        <a className=\"navbar-item\" href=\"../\">\n            <img src=\"http://bulma.io/images/bulma-type-white.png\" alt=\"Logo\"></img>\n        </a>\n        <span class=\"navbar-burger burger\" data-target=\"navbarMenu\">\n            <span></span>\n            <span></span>\n            <span></span>\n        </span>\n    \n    <div id=\"navbarMenu\" class=\"navbar-menu\">\n        <div class=\"navbar-end\">\n            <span class=\"navbar-item\">\n                <a class=\"button is-white is-outlined\" href=\"/main\">\n                    <span class=\"icon\">\n                        <i class=\"fa fa-home\"></i>\n                    </span>\n                    <span>Home</span>\n                </a>\n            </span>\n            <span class=\"navbar-item\">\n                <a class=\"button is-white is-outlined\" href=\"/yoga\">\n                    <span class=\"icon\">\n                        <i class=\"fa fa-superpowers\"></i>\n                    </span>\n                    <span>yoga</span>\n                </a>\n            </span>\n            <span class=\"navbar-item\">\n                <a class=\"button is-white is-outlined\" href=\"/contact\">\n                    <span class=\"icon\">\n                        <i class=\"fa fa-book\"></i>\n                    </span>\n                    <span>Contact Us</span>\n                </a>\n            </span>\n            <span class=\"navbar-item\">\n                <a class=\"button is-white is-outlined\" href=\"https://github.com/BulmaTemplates/bulma-templates/blob/master/templates/landing.html\">\n                    <span class=\"icon\">\n                        <i class=\"fa fa-github\"></i>\n                    </span>\n                    <span>View Source</span>\n                </a>\n            </span>\n        </div>\n    </div>\n    </div>\n    \n    </div>\n    </nav>\n    \n    \n    \n    }\n","import React from \"react\";\nimport \"./style.css\";\nimport Navbar from \"./navbar\"\n\nexport default function main() {\n    return <div>\n        <Navbar /> \n    \n    <section class=\"hero is-info is-fullheight\">\n        <div class=\"hero-head\"></div>\n           \n            <div class=\"hero-body\">\n                <div class=\"container has-text-centered\">\n                    <div class=\"column is-6 is-offset-3\">\n                        <h1 class=\"title\">\n                            Welcome.\n                        </h1>\n                        <h2 class=\"subtitle\">\n                            Tara Loves is a cultivation\n                            of all my passions.\n                            It began as my instagram handle \"taralovestea\"\n                            that I made in highschool- but now as a 26 year old\n                            I have many projects, insights, and knowledge to add to the list.\n                            I'm glad you are here. \n                        </h2>\n                        <div class=\"box\">\n                        <form\n                action=\"https://formspree.io/taraelisabethhughes@gmail.com\"\n                method=\"POST\"\n            >\n                            <div class=\"field is-grouped\">\n                                <p class=\"control is-expanded\">\n                                    <input class=\"input\" type=\"text\" placeholder=\"Enter your email\" /> \n                                <div>\n                                <p class=\"control\">\n                                    <a class=\"button is-info\">\n                                        Notify Me\n                                    </a>\n                                </p>\n                            </div>\n                            </p>\n                        </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n    </div>\n    <script async type=\"text/javascript\" src=\"../js/bulma.js\"></script>\n</section>\n</div>\n\n}","import React from 'react';\nimport Main from './components/main'\nimport './App.css';\n\nfunction App() {\n  return (\n    <Main />\n    \n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}